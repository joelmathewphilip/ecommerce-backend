version: '3.8'
networks:
  ecommerce.backend:
    name: ecommerce.backend

services:
  mongo:
    container_name: mongodb
    image: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_PASSWORD: '12345'
      MONGO_INITDB_ROOT_USERNAME: mongoadmin
    ports:
      - '27017:27017'
    networks:
      - ecommerce.backend
    volumes:
      - type: volume
        source: ecommerce_data
        target: /data/db

  rabbitmq:
    restart: always
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    networks:
      - ecommerce.backend
    ports:
      - 5672:5672
      - 15672:15672

  postgresdb:
    container_name: postgresdb
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: '12345'
    ports:
      - 5432:5432
    networks:
      - ecommerce.backend
    volumes:
      - "pg_data:/var/lib/postgresql/data"

  catalogservice:
    container_name: catalogservice-v1
    image: 'ecommerce/catalogservice:v1'
    build:
      context: .
      dockerfile: src/Services/Ecommerce.Catalog.API/Dockerfile
    ports:
      - '5002:80'
      - '5003:443'
    environment:
      'MongoDbSettings:mongoHost': mongo
      'MongoDbSettings:mongoPassword': '12345'
      'ASPNETCORE_ENVIRONMENT': 'Development'
      'MongoDbSettings:mongoPort': '27017'
      'CouponService:Url': 'http://discountservice:8081/api/discounts'
    networks:
      - ecommerce.backend
    depends_on:
      - mongo
      - discountservice

  identityservice:
    container_name: identityservice-v1
    image: 'ecommerce/identityservice:v1'
    build:
      context: .
      dockerfile: src/Services/Ecommerce.Identity.API/Dockerfile
    ports:
      - '5000:80'
      - '5001:443'
    environment:
      'MongoDbSettings:mongoHost': mongo
      'MongoDbSettings:mongoPassword': '12345'
      'ASPNETCORE_ENVIRONMENT': 'Development'
      'MongoDbSettings:mongoPort': '27017'
    networks:
      - ecommerce.backend
    depends_on:
      - mongo

  accountservice:
    container_name: accountservice-v1
    image: 'ecommerce/accountservice:v1'
    build:
      context: .
      dockerfile: src/Services/Ecommerce.Account.API/Dockerfile
    ports:
      - '5004:80'
      - '5005:443'
    environment:
      'MongoDbSettings:mongoHost': mongo
      'MongoDbSettings:mongoPassword': '12345'
      'MongoDbSettings:mongoPort': '27017'
      'RabbitMqSettings:password': 'guest'
      'RabbitMqSettings:username': 'guest'
      'RabbitMqSettings:hostname': 'rabbitmq'
      'RabbitMqSettings:port': '5672'
    networks:
      - ecommerce.backend
    depends_on:
      - mongo
      - cartservice
      - rabbitmq

  cartservice:
    container_name: cartservice-v1
    image: 'ecommerce/cartservice:v1'
    build:
      context: .
      dockerfile: src/Services/Ecommerce.Cart.API/Dockerfile
    ports:
      - '5008:80'
      - '5009:443'
    environment:
      'PostgresDbSettings:postgresHost': 'postgresdb'
      'PostgresDbSettings:postgresPassword': '12345'
      'PostgresDbSettings:postgresUser': 'postgres'
      'PostgresDbSettings:postgresPort': '5432'
      'ASPNETCORE_ENVIRONMENT': 'Development'
      'RabbitMqSettings:password': 'guest'
      'RabbitMqSettings:username': 'guest'
      'RabbitMqSettings:hostname': 'rabbitmq'
      'RabbitMqSettings:port': '5672'
      'IdentityUrl': 'http://identityservice:5000/api/Identity/login'
      'CatalogUrl': 'http://catalogservice:5002/api/CatalogItems/items'
    networks:
      - ecommerce.backend
    depends_on:
      - postgresdb
      - rabbitmq
      - orderingservice
      - identityservice
      - catalogservice

  orderingservice:
    container_name: orderingservice-v1
    image: 'ecommerce/orderingservice:v1'
    build:
      context: .
      dockerfile: src/Services/Ordering/Ecommerce.Orders.API/Dockerfile
    ports:
      - '5006:80'
      - '5007:443'
    environment:
      'PostgresDbSettings:postgresHost': 'postgresdb'
      'PostgresDbSettings:postgresPassword': '12345'
      'PostgresDbSettings:postgresUser': 'postgres'
      'PostgresDbSettings:postgresPort': '5432'
      #'ASPNETCORE_ENVIRONMENT': 'Development'
    networks:
      - ecommerce.backend
    depends_on:
      - postgresdb

  discountservice:
    container_name: discountservice-v1
    image: projectsofjoel/ecommerce-discountservice:v1
    #build: .
    environment:
      'MONGODB_USERNAME': 'mongoadmin'
      'MONGODB_PASSWORD': '12345'
      'MONGODB_PORTNUMBER': '27017'
      'MONGODB_HOST': mongo
      'MONGO_DB_NAME': 'ecommerce'
    ports:
      - "8081:8081"
    networks:
      - ecommerce.backend
    depends_on: 
      - mongo

volumes:
  ecommerce_data:
  pg_data:
